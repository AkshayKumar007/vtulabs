.MODEL SMALL
.DATA
	ARRAY DW 1110H, 2220H, 3330H, 4440H, 5550H ; 16 bit array
	LEN DW ($-ARRAY)/2 				; len = (last_index - first_index)/2
	SRCH EQU 4440H 					; key
	SUCMSG DB 'ELEMENT FOUND AT POSITION : ' ; no $ symbol here
	RESULT DB ?,'$'							; $ is must here
	FAILMSG DB 'ELEMENT NOT FOUND $'

.CODE
	MOV AX,@DATA
	MOV DS,AX		; initialise data segment in code segment

	MOV BX,1 		; low
	MOV DX,LEN 		; high
	MOV CX,SRCH

AGAIN:	CMP BX,DX 	; WHILE(LOW<HIGH)
		JA FAILURE 	; JUMP IF ABOVE
		
		MOV AX,BX
		ADD AX,DX		; LOW+HIGH
		SHR AX,1 		; (LOW+HIGH)/2

		MOV SI,AX 		; HAVE AN INDEX

		DEC SI
		ADD SI,SI 		; ADJUST INDEX (POINTING TO MID) 

		CMP CX,ARRAY[SI] 		; IF(KEY == ARRAY[MID])
		JAE BIGGER 			; JUMP IF ABOVE OR EQUAL

		DEC AX 				; DEC MID
		MOV DX,AX 			; MAKE THIS AS NEW HIGH

		JMP AGAIN

BIGGER:	JE SUCCESS		; JUMP IF EQUAL

		INC AX 			; INC LOW
		MOV BX,AX		; MAKE THIS AS NEW LOW

		JMP AGAIN

SUCCESS:	ADD AL,'0'		; ADD '0' TO POSITION AL TO CONVERT TO ASCII
			MOV RESULT,AL	; MOVE POSITION TO OUR VARIABLE

			LEA DX,SUCMSG
			JMP DISPLAY

FAILURE:	LEA DX,FAILMSG

DISPLAY:	MOV AH,9	; PRINT CONTENT POINTED TO BY DX
			INT 21H

			MOV AH,4CH	; TERMINATE
			INT 21H

END
